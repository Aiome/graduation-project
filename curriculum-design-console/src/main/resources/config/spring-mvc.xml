<?xml version="1.0" encoding="UTF-8"?>  
<beans 
	xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans
					http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
					http://www.springframework.org/schema/context
					http://www.springframework.org/schema/context/spring-context-4.3.xsd
					http://www.springframework.org/schema/mvc
					http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">
    <!-- 使用组件扫描的方式可以一次扫描多个Controller -->
   	<context:component-scan base-package="top.aiome"></context:component-scan>
    <!--也可以使用单个的配置方式，需要指定Controller的全限定名。-->
    <!--<bean name="/queryUser.action" class="top.aiome.TestController"/>-->

    <!-- 配置注解的处理器映射器和处理器适配器 -->
    <!--<mvc:annotation-driven conversion-service="conversionService"></mvc:annotation-driven>-->
    <!--另一种方式-->
    <!--&lt;!&ndash; 注解的处理器适配器 &ndash;&gt;-->
    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/>-->
    <!--&lt;!&ndash; 注解的处理器映射器 &ndash;&gt;-->
    <!--<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/>-->

    <!--拦截器-->
    <!--<mvc:interceptors>-->
        <!--&lt;!&ndash; 直接定义拦截所有请求 &ndash;&gt;-->
        <!--<bean class="top.aiome.TestController"></bean>-->
        <!--&lt;!&ndash; <mvc:interceptor>-->
            <!--拦截所有路径的请求   包括子路径-->
            <!--<mvc:mapping path="/**"/>-->
            <!--<bean class="com.wxisme.ssm.interceptor.IdentityInterceptor"></bean>-->
        <!--</mvc:interceptor> &ndash;&gt;-->
    <!--</mvc:interceptors>-->

    <!-- 定义全局异常处理器 -->
    <!--&lt;!&ndash; 只有一个全局异常处理器起作用 &ndash;&gt;-->
    <!--<bean id="exceptionResolver" class="top.aiome.TestController"></bean>-->

    <!-- 自定义参数类型绑定 -->
    <!--<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">-->
        <!--<property name="converters">-->
            <!--<list>-->
                <!--&lt;!&ndash; 日期类型绑定 &ndash;&gt;-->
                <!--<bean class="top.aiome.TestController"/>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->

    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="104857600" />     <!-- 100M  1024 * 1024 * 100 -->
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960" />
    </bean>
    
    <!-- 静态资源访问(不对静态资源如CSS、JS、HTML等进行拦截) -->
    <mvc:default-servlet-handler />

    <!-- 配置视图解析器 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 使用前缀和后缀 -->
        <property name="prefix" value="/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>

    <mvc:annotation-driven>
        <!-- 解决springmvc在单纯返回一个字符串对象时所出现的乱码情况 -->
        <mvc:message-converters register-defaults="true">
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8" />
            </bean>
            <!-- controller中将方法返回结果对象转换成json的转换器 -->
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>

</beans>