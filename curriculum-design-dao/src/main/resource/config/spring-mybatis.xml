<?xml version="1.0" encoding="UTF-8"?>  
<beans 
	xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
					    http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
					    http://www.springframework.org/schema/context
					    http://www.springframework.org/schema/context/spring-context-4.3.xsd
					    http://www.springframework.org/schema/tx
            			http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
					    http://www.springframework.org/schema/aop 
					    http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
					    http://www.springframework.org/schema/mvc
					    http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">

	<!-- 自动扫描 
    <context:component-scan base-package="com.ai.channel.service"></context:component-scan> 
    -->  		    
	
    <!-- 加载配置文件 -->
    <!--<context:property-placeholder location="classpath:resources/db.properties" />-->
    
    
    <!-- 开启事务控制的注解支持 -->  
    <!--<tx:annotation-driven transaction-manager="transactionManager" order="0"/>-->
    
    <!-- 开启支持@AspectJ风格的切面声明 -->  
  	<aop:aspectj-autoproxy proxy-target-class="true" expose-proxy="true"/>  

    
    <bean id="propertyConfigurer"  
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">  
        <property name="location" value="classpath:config/jdbc.properties" />
        <property name="ignoreUnresolvablePlaceholders" value="true" />
    </bean>  
     
  
     <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="initialSize" value="${jdbc.initialSize}" />
        <property name="maxActive" value="${jdbc.maxActive}" />
        <property name="minIdle" value="${jdbc.minIdle}" />
        <property name="maxWait" value="${jdbc.maxWait}" />
        <property name="validationQuery" value="${jdbc.validationQuery}"/>
        <!--  -->
        <property name="validationQueryTimeout" value="${jdbc.validationQueryTimeout}"/> 
        
        <property name="testOnBorrow" value="${jdbc.testOnBorrow}" />
        <property name="testOnReturn" value="${jdbc.testOnReturn}" />
        <property name="testWhileIdle" value="${jdbc.testWhileIdle}" />
        <property name="keepAlive" value="${jdbc.keepAlive}" />
        
        <property name="removeAbandoned" value="${jdbc.removeAbandoned}" />
        <property name="removeAbandonedTimeout" value="${jdbc.removeAbandonedTimeout}" />
        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.timeBetweenEvictionRunsMillis}" />
        <property name="minEvictableIdleTimeMillis" value="${jdbc.minEvictableIdleTimeMillis}" />
        
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="${jdbc.logAbandoned}" />
        <!-- 监控数据库 -->
        <property name="filters" value="${jdbc.filters}" />
    </bean>
    
    <!-- 配置druid监控spring jdbc -->
    <bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor"></bean>
    <bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut" scope="prototype">
        <property name="patterns">
            <list>
                <value>top.aiome.*.service.*</value>
            </list>
        </property>
    </bean>
    <aop:config>
        <aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druid-stat-pointcut" />
    </aop:config>

  
    
    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <property name="configLocation" value="classpath:config/mybatis-config.xml"></property>  
        <!-- 自动扫描mapping.xml文件-->  
        <property name="mapperLocations" value="classpath*:top/aiome/**/*Mapper.xml"></property>
        <!--<property name="mapperLocations" value="classpath*:com/ai/channel/*/dao/mapper/*Mapper.xml"></property>--> 
    </bean>  
    
    <!-- 配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="top.aiome" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
    </bean>  
     
        <!-- (事务管理)transaction manager -->  
    <bean id="transactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
	     <tx:attributes>
	        <tx:method name="save*" propagation="REQUIRED" rollback-for="Exception" />
	        <tx:method name="update*" propagation="REQUIRED" rollback-for="Exception" />
	        <tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception"/>
	        <tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception"/>
	        <tx:method name="get*" propagation="REQUIRED" read-only="true"/>
			<tx:method name="select*" propagation="REQUIRED" read-only="true"/>
	        <tx:method name="*" propagation="REQUIRED" read-only="true"/>
	    </tx:attributes>
	</tx:advice>

    <aop:config>
        <aop:pointcut id="transactionPointcut" expression="execution(* top.aiome.*.service..*Process.*(..))" />
        <aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice"  order="1"/>
    </aop:config>
	
</beans>